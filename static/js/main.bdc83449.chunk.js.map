{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","title","description","imgUrl","imdbUrl","_jsxs","className","children","_jsx","src","alt","href","MoviesList","movies","map","imdbId","FindMovie","addMovie","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","setMovie","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","error","setError","_Fragment","onSubmit","event","preventDefault","fetch","concat","then","res","json","catch","Response","Error","getMovie","response","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","placeholder","value","onChange","target","disabled","onClick","App","setMovies","some","m","prev","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bdc83449.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n  } = movie;\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={imgUrl === 'N/A'\n              ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n              : imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {description}\n          <br />\n          <a href={imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface FindMovieProps {\n  addMovie: (movie: Movie) => void\n}\n\nexport const FindMovie: React.FC<FindMovieProps> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    setIsLoading(true);\n    getMovie(query)\n      .then(response => {\n        const {\n          Title, Plot, Poster, imdbID,\n        } = response;\n\n        if (imdbID) {\n          setMovie({\n            title: Title,\n            description: Plot,\n            imgUrl: Poster,\n            imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n            imdbId: imdbID,\n          });\n        } else {\n          setError(true);\n        }\n      })\n      .catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  };\n\n  const handleQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setError(false);\n  };\n\n  const handleAddMovie = () => {\n    if (movie) {\n      addMovie(movie);\n    }\n\n    setQuery('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${error ? 'is-danger' : ''}`}\n              value={query}\n              onChange={handleQuery}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={`button is-light ${isLoading ? 'is-loading' : ''}`}\n              disabled={!query}\n            >\n              {movie ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=cde7c2bd';\n\nexport function getMovie(query: string): Promise<MovieData> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = (movie: Movie): void => {\n    if (!movies.some(m => m.imdbId === movie.imdbId)) {\n      setMovies(prev => [...prev, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={handleAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}